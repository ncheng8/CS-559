precision highp float;
uniform float time;
uniform vec2 resolution;
varying vec3 fPosition;
varying vec3 fNormal;

const float cambient   = 0.72;
const float cdiffuse   = 0.7;
const float cspecular    = 1.0;
const float spec_exp    = 32.0;
vec3  color = normalize(vec3(cos(time),1.1*sin(2.0*time),cos(time)));
const vec3  lightCol   = vec3(1.0,1.0,1.0);

void main()
{
  vec3 l = normalize(lightCol);
  vec3 n = normalize(fNormal);
  vec3 e = normalize(-fPosition);
  vec3 h = normalize (e+l);
  
  float angle = 35.0*time;
  
  vec3 light_dir = vec3(sin(angle),-1.0,cos(angle));
  float diffuse = cdiffuse*dot(fNormal,light_dir);
  
  vec3 ambient_color = cambient * color ;
  vec3 diffuse_color = diffuse * color;  
   vec3 specular_color = cspecular * pow(max(0.0,dot(n,h)),spec_exp) * lightCol;
   
  gl_FragColor = vec4(diffuse_color + ambient_color + specular_color, 1.0);
}